<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAggoAAAJNU0Z0AUkBTAMBAQAB
        EAEAARABAAEgAQABIAEABP8BIQEACP8BQgFNATYHAAE2AwABKAMAAYADAAEgAwABAQEAASAGAAFAKgAD
        LgFIAzAB1gMCAf4DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMCAf4DMAHWAy4BSP8ArQADGQEiAw4B9wMCAf4DJwHhAycB3wMnAd8DJwHfAycB3wMnAd8D
        JwHfAycB3wMnAd8DJwHfAycB3wMnAd8DJwHfAycB3wMnAd8DJwHhAwIB/gMOAfcDGQEi/wCpAAM9AW4D
        AAH/A0MBhkAAA0MBhgMAAf8DPQFu/wCpAANDAYcDAAH/AzYBWggAAwcBCQMgAS4MAAMUARsDFAEbDAAD
        IAEuAwcBCQgAAzYBWgMAAf8DQwGH/wCpAANFAZwDAAH/Ay0BRQgAA0QBjwMAAf8DIQEvCAADKgHeAyoB
        3ggAAyEBLwMAAf8DRAGPCAADLQFFAwAB/wNFAZz/AKkAA0MBsQMAAf8DIQEwCAADQwGtAwAB/wMkATQI
        AAMWAe8DFgHvCAADJAE0AwAB/wNDAa0IAAMhATADAAH/A0MBsf8AqQADOgHGAwAB/wMUARsIAAM/Ab0D
        AAH/AxoBJAgAAxYB7wMWAe8IAAMaASQDAAH/Az8BvQgAAxQBGwMAAf8DOgHG/wCpAAMsAdwDAgH+AwUB
        BggAAzcBzQMAAf8DDwEUCAADFgHvAxYB7wgAAw8BFAMAAf8DNwHNCAADBQEGAwIB/gMsAdz/AKkAAxQB
        8QMWAe8MAAMsAdwDAAH/AwMBBAgAAxYB7wMWAe8IAAMDAQQDAAH/AywB3AwAAxYB7wMUAfH/AKUAAwYB
        BwMAAf8DLQHaDAADHAHsAxEB9AwAAxYB7wMWAe8MAAMRAfQDHAHsDAADLQHaAwAB/wMGAQf/AKEAAxUB
        HAMAAf8DOwHFCAAEAQMGAfsDJAHkDAADFgHvAxYB7wwAAyQB5AMGAfsEAQgAAzsBxQMAAf8DFQEc/wCh
        AAMiATEDAAH/A0IBsAgAAwoBDQMAAf8DMwHUDAADFgHvAxYB7wwAAzMB1AMAAf8DCgENCAADQgGwAwAB
        /wMiATH/AKEAAy0BRgMAAf8DRQGbCAADFQEdAwAB/wM7AcQMAAMWAe8DFgHvDAADOwHEAwAB/wMVAR0I
        AANFAZsDAAH/Ay0BRv8AoQADNwFbAwAB/wNDAYYIAAMgAS0DAAH/A0EBtAwAAxYB7wMWAe8MAANBAbQD
        AAH/AyABLQgAA0MBhgMAAf8DNwFb/wChAAM+AXADAAH/Az4BcQgAAygBPAMAAf8DQwGlDAADFgHvAxYB
        7wwAA0MBpQMAAf8DKAE8CAADPgFxAwAB/wM+AXD/AKEAA0MBhQMAAf8DNwFbCAADMAFMAwAB/wNFAZUM
        AAMWAe8DFgHvDAADRQGVAwAB/wMwAUwIAAM3AVsDAAH/A0MBhf8AoQADRQGbAwAB/wMtAUYIAAM3AVwD
        AAH/A0MBhQwAAxYB7wMWAe8MAANDAYUDAAH/AzcBXAgAAy0BRgMAAf8DRQGb/wChAANCAbADAAH/AyIB
        MQgAAz0BbAMAAf8DPwF1DAADFgHvAxYB7wwAAz8BdQMAAf8DPQFsCAADIgExAwAB/wNCAbD/AKEAAzsB
        xQMAAf8DFQEcCAADQQF8AwAB/wM6AWUMAAMWAe8DFgHvDAADOgFlAwAB/wNBAXwIAAMVARwDAAH/AzsB
        xf8AoQADLQHaAwAB/wMGAQcIAANEAYoDAAH/AzQBVQwAAxYB7wMWAe8MAAM0AVUDAAH/A0QBiggAAwYB
        BwMAAf8DLQHa/wChAAMWAe8DFAHxDAADKQE+A0IBsAMSARgMAANCAYIDQgGCDAADEgEYA0IBsAMpAT4M
        AAMUAfEDFgHv/wCdAAMFAQYDAgH+AywB3FAAAywB3AMCAf4DBQEG/wCZAAMeASoDAAH/AyoB3gM5AWAD
        OQFgAzkBYAM5AWADOQFgAzkBYAM5AWADOQFgAzkBYAM5AWADOQFgAzkBYAM5AWADOQFgAzkBYAM5AWAD
        OQFgAzkBYAM5AWADOQFgAyoB3gMAAf8DHgEq/wCVAAMuAUcDDwH1AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AxEB9AMuAUf/AI0ABAEDKAHgAwIB/gNEAZYDQgGAA0IBgANCAYADQgGAA0IB
        gANCAYADQgGAA0IBgANCAYADQgGAA0IBgANCAYADQgGAA0IBgANCAYADQgGAA0IBgANCAYADQgGAA0IB
        gANCAYADQgGAA0QBlgMCAf4DKAHgBAH/AIkAAwgBCgMAAf8DKgHdYAADKgHdAwAB/wMIAQr/AI0AAzIB
        0wMAAf8DQQG2A0UBnwNFAZ8DRQGfA0UBnwNFAZ8DRQGfA0UBnwNFAZ8DRQGfA0UBnwNFAZ8DRQGfA0UB
        nwNFAZ8DRQGfA0UBnwNFAZ8DRQGfA0UBnwNFAZ8DRQGfA0UBnwNBAbYDAAH/AzIB0/8AkQADIwEzAyQB
        5QMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMkAeUDIwEz/wCVAAMGAQgDJgE4AyoB
        QAMqAUADKgFAAyoBQANEAasDAAH/A0EBfAMqAUADKgFAAyoBQAMqAUADKgFAAyoBQAMqAUADKgFAA0EB
        fAMAAf8DRAGrAyoBQAMqAUADKgFAAyoBQAMmATgDBgEI/wCxAANDAYUDAAH/Az0BbSAAAz0BbQMAAf8D
        QwGF/wDJAAMlATcDBAH9AwQB/AMoAeADJwHfAycB3wMnAd8DJwHfAycB3wMnAd8DKAHgAwQB/AMEAf0D
        JQE3/wDNAAM2AVoDJwHfAwIB/gMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMCAf4DJwHfAzYBWv8AqQAB
        QgFNAT4HAAE+AwABKAMAAYADAAEgAwABAQEAAQEGAAECFgAD/wEAAfwCAAE/DAAB+AIAAR8MAAH4Av8B
        HwwAAfgBzgFzAR8MAAH4AcYBYwEfDAAB+AHGAWMBHwwAAfgBxgFjAR8MAAH4AcYBYwEfDAAB+QHGAWMB
        nwwAAfEBzgFzAY8MAAHxAY4BcQGPDAAB8QGOAXEBjwwAAfEBjgFxAY8MAAHxAY4BcQGPDAAB8QGOAXEB
        jwwAAfEBjgFxAY8MAAHxAY4BcQGPDAAB8QGOAXEBjwwAAfEBjgFxAY8MAAHxAY4BcQGPDAAB8wGOAXEB
        zwwAAeMC/wHHDAAB4AIAAQcMAAHAAgABAwwAAYACAAEBDAABjwL/AfEMAAHAAgABAwwAAcACAAEDDAAB
        4AIAAQcMAAH/AY8B8QH/DAAB/wGAAQEB/wwAAf8BwAEDAf8MAAs=
</value>
  </data>
</root>