<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAFAUAAAJNU0Z0AUkBTAIBAQIB
        AAEwAQABMAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAARADAAEBAQABIAYAARAi
        AAMhATADTgGXA1IB2QMaAfkDGgH5A1IB2QNOAZcDIQEwSAADLQFGA1MB2ogAAwcBCQNPAZkDDAH9A1YB
        ugM+AWoDLQFEAy0BRAM+AWoDVgG6AwwB/QNPAZkDBwEJPAADLwFJAz4B7AMqAUCEAAMHAQkDVwHAA0wB
        4AMoATwYAAMoATwDTAHgA1cBwAMHAQkYAAMYASEDKAE8AyMBMgMHAQkMAAMxAU0DPgHsAykBPogAA08B
        mQNMAeADEwEaIAADEwEaA0wB4ANPAZkMAAMCAQMDPwFsA04B3QNBAekDVwHJA1YB1AMrAfMDUwGmAxoB
        JAMzAVADQQHrAygBO4gAAyEBMAMMAf0DKAE8EAADNAFTAzQBUxAAAygBPAMMAf0DIQEwBAADCwEOA1cB
        vgNZAcMDKAE7BAEIAAMPARMDRgF9Az4B7AM+AewDJgE4jAADTgGXA1YBuhQAA1ABngNQAZ4UAANWAboD
        TgGXBAEDVgG1A1EBoQMCAQMYAAMnAToDQQHrAyMBMowAA1IB2QM+AWoUAANQAZ4DUAGeFAADPgFqA1IB
        2QM0AVMDVQHVAwUBBiAAAzsBZQNWAcaMAAMaAfkDLQFECAADMwFSA0wBkANMAZADVQHVA1UB1QNMAZAD
        TAGQAzMBUggAAy0BRAMaAfkDWAG3AzoBYCQAAwMBBANHAeUDIAEtiAADGgH5Ay0BRAgAAzwBZgNVAawD
        VQGsA0wB4ANMAeADVQGsA1UBrAM8AWYIAAMtAUQDGgH5AzgB7gMWAR4oAANTAacDOwFkiAADUgHZAz4B
        ahQAA1ABngNQAZ4UAAM+AWoDUgHZAwwB/QMKAQ0oAANOAZUDQgF0iAADTgGXA1YBuhQAA1ABngNQAZ4U
        AANWAboDTgGXA0UB5AMeASooAANWAbMDOAFbiAADIQEwAwwB/QMoATwQAAM7AWUDOwFlEAADKAE8AwwB
        /QMhATADUgGjA0QBeSQAAwwBDwMyAfEDFQEcjAADTwGZA0wB4AMTARogAAMTARoDTAHgA08BmQQAAyQB
        NAM/AeoDEwEZIAADTAGOA1IBqJAAAwcBCQNXAcADTAHgAygBPBgAAygBPANMAeADVwHAAwcBCQgAA0gB
        hANWAc4DEwEZGAADQAFxA0kB4gMSAReUAAMHAQkDTwGZAwwB/QNWAboDPgFqAy0BRAMtAUQDPgFqA1YB
        ugMMAf0DTwGZAwcBCQwABAEDRwGCAz8B6gNEAXoDHgEqAwcBCQMQARUDMgFPA1gBvQNUAdMDGgEkoAAD
        IQEwA04BlwNSAdkDGgH5AxoB+QNSAdkDTgGXAyEBMBwAAyEBLwNQAZ4DTgHhAwwB/AMvAfIDVwHCAz0B
        aAMFAQaUAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAB8AEPAf8B/AQAAcAB
        AwH/AfgEAAGHAeEB+AFxBAABjwHxAcABAwQAAR4BeAGDAQcEAAE+AXwBDwHHBAABPgF8AR8B5wQAATAB
        DAE/AeMEAAEwAQwBPwHzBAABPgF8AT8B8wQAAT4BfAE/AfMEAAEeAXgBPwHjBAABjwHxAR8B5wQAAYcB
        4QGPAccEAAHAAQMBgAEPBAAB8AEPAeABHwQACw==
</value>
  </data>
</root>