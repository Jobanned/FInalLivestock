<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABmVSURBVHhe7d17
        rO15Wd/xZ5iBAAN4reAFMWIi2lZ7CagICSBGhNpomiYtVlOVtMG0RSkqtRZpotWqTbVGK1Vj4h8tttik
        QSWWklqbtrYWak01BbSV6sB4qbcBgUFp85N1Mmu+z+/M2fvstT/rd3m9kndCnn3O3muvvTbPfL+z55wq
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgH344Kr6tKr64qp6ZVV9W1W9qqpeXVU/UlWvlyTpjE27aNpJ026adtS0q6ad9bTDDuMCHl5V
        n1lVX3d4Un+1qv6fJEkr7t7DTpt229Or6q5x+e3VB1XVi6rqdVV138wTJ0nSlpp23Y9W1ZdW1ePGpbh1
        D6uq51bVD1bVO2eeHEmS9tC7q+q1VfXnD7fgm/WIw78XecvMkyBJ0p7731X1kqp65Lg81+zuqvrKqvqV
        mU9YkiQ90LQrp38QePS4TNfm86rqbTOfoCRJunn3HG7NV+fJVfVjM5+QJEm6eG+oqqeMS3aJ7qiqrzr8
        YMP4SUiSpMs37dSXHXbsIn3Y4Q9EGB+4JEm6etOfJ/D4cfme2/QnHk0/wTg+WEmSdLp+uaqeMS7hc5l+
        SOH+mQcpSZJO37Rzv2hcxmnTf6rwBzMPTpIkXV/vr6qvHpdywvSDCNNfeDA+IEmSlOs7Dn/Cbsy3zzwI
        SZKUb9rJEV8788ElSdL5evm4rE9t+oG/6d87jB9YkiSdr2k3f9m4tE/leVX1+zMfVJIknb/3VdXnjMv7
        qj6mqn595oNJkqTl9H+r6mPHJX677qqqfz/zQSRJ0vL6ycPuvrJvmnnnkiRpuX3DuMwv69P9QT+SJK2u
        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
        /fzML15Kv1ZVr6mqv1NVX1hVf6aqnitJ0hmbdtELD7tp2lHTrhr311L6b+PSP3bOP5ZQkiRdXy8dl/6x
        6Sfw3zXzmyRJ0nr7nar6kHHpj75j5jdKkqT19vfGZT/nI6vq3TO/WZIkra/pZn/6q4cv5Htm3oEkSVpf
        083+hT2xqu6beSeSJGk9/eZlTv83fPXMO5IkSevpy8flfhF3VdXPzLwzSZK0/Ka/e+DOcblf1PQn8C3p
        jzCUJEm37g+q6tPHpX5Z3z7zjiVJ0nL7hnGZ346HV9V/nHnnkiRpef3k4V/jn8THVtVvzHwQSZK0nKaf
        +n/SuMSv6s8e/p3C+MEkSdL5e19Vfe64vE/lxTMfUJIknbfpB/a/bFzap/Z3Zz6wJEk6X183Luvr8t0z
        H1ySJOWbdnLMHVX1bTMPQpIk5fpHVfWwcUknvMQfFCRJUrxp975yXMppX3L4ycPxwUmSpNM37dwvHZfx
        uTyrqu6ZeZCSJOl0/crhj+lflA+vqh+debCSJOnqvaGqnjAu36WYfjhw+muE3zPzwCVJ0uWbdurXnuuH
        /S7rE6rqx2Y+CUmSdPH+bVV90rhk1+DzquqXZj4hSZJ0895eVV88LtW1eXRVfcXhBxfGT1CSJD3QtPhf
        WlV3j8t0zR5x+KeZN898wpIk7bm3Hf5snUeNy3NL7qyq51fVP62q35t5EiRJ2kPvrqpXV9ULququcVlu
        3eOq6i9X1Y9U1e/OPDmSJG2p+w4770VV9UHjUtyr6Z9+PuPwnzr8eFXdO/PESZK0pt5RVa8//G19T9/j
        Sf92Tf909NSq+ktV9fVV9a1V9arDlclrD0+qJEnnatpF/+ywm76lql5RVV9UVU9zwgcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD24v8D
        a7iK28IG9FYAAAAASUVORK5CYII=
</value>
  </data>
</root>