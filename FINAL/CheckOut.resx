<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAggoAAAJNU0Z0AUkBTAMBAQAB
        IAEAASABAAEgAQABIAEABP8BIQEACP8BQgFNATYHAAE2AwABKAMAAYADAAEgAwABAQEAASAGAAFAKgAD
        LgFIA0YB1gMEAf4DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMEAf4DRgHWAy4BSP8ArQADGQEiAxgB9wMEAf4DPwHhAz4B3wM+Ad8DPgHfAz4B3wM+Ad8D
        PgHfAz4B3wM+Ad8DPgHfAz4B3wM+Ad8DPgHfAz4B3wM+Ad8DPwHhAwQB/gMYAfcDGQEi/wCpAAM/AW4D
        AAH/A0gBhkAAA0gBhgMAAf8DPwFu/wCpAANJAYcDAAH/AzcBWggAAwcBCQMgAS4MAAMUARsDFAEbDAAD
        IAEuAwcBCQgAAzcBWgMAAf8DSQGH/wCpAANOAZwDAAH/Ay0BRQgAA0sBjwMAAf8DIQEvCAADQgHeA0IB
        3ggAAyEBLwMAAf8DSwGPCAADLQFFAwAB/wNOAZz/AKkAA1IBsQMAAf8DIQEwCAADUQGtAwAB/wMkATQI
        AAMoAe8DKAHvCAADJAE0AwAB/wNRAa0IAAMhATADAAH/A1IBsf8AqQADTgHGAwAB/wMUARsIAANSAb0D
        AAH/AxoBJAgAAygB7wMoAe8IAAMaASQDAAH/A1IBvQgAAxQBGwMAAf8DTgHG/wCpAANDAdwDBAH+AwUB
        BggAA00BzQMAAf8DDwEUCAADKAHvAygB7wgAAw8BFAMAAf8DTQHNCAADBQEGAwQB/gNDAdz/AKkAAyQB
        8QMoAe8MAANDAdwDAAH/AwMBBAgAAygB7wMoAe8IAAMDAQQDAAH/A0MB3AwAAygB7wMkAfH/AKUAAwYB
        BwMAAf8DRQHaDAADLwHsAx0B9AwAAygB7wMoAe8MAAMdAfQDLwHsDAADRQHaAwAB/wMGAQf/AKEAAxUB
        HAMAAf8DUAHFCAAEAQMMAfsDOAHkDAADKAHvAygB7wwAAzgB5AMMAfsEAQgAA1ABxQMAAf8DFQEc/wCh
        AAMiATEDAAH/A1EBsAgAAwoBDQMAAf8DSgHUDAADKAHvAygB7wwAA0oB1AMAAf8DCgENCAADUQGwAwAB
        /wMiATH/AKEAAy0BRgMAAf8DTgGbCAADFQEdAwAB/wNQAcQMAAMoAe8DKAHvDAADUAHEAwAB/wMVAR0I
        AANOAZsDAAH/Ay0BRv8AoQADOAFbAwAB/wNIAYYIAAMgAS0DAAH/A1IBtAwAAygB7wMoAe8MAANSAbQD
        AAH/AyABLQgAA0gBhgMAAf8DOAFb/wChAANAAXADAAH/A0ABcQgAAygBPAMAAf8DUAGlDAADKAHvAygB
        7wwAA1ABpQMAAf8DKAE8CAADQAFxAwAB/wNAAXD/AKEAA0gBhQMAAf8DOAFbCAADMAFMAwAB/wNNAZUM
        AAMoAe8DKAHvDAADTQGVAwAB/wMwAUwIAAM4AVsDAAH/A0gBhf8AoQADTgGbAwAB/wMtAUYIAAM4AVwD
        AAH/A0gBhQwAAygB7wMoAe8MAANIAYUDAAH/AzgBXAgAAy0BRgMAAf8DTgGb/wChAANRAbADAAH/AyIB
        MQgAAz8BbAMAAf8DQgF1DAADKAHvAygB7wwAA0IBdQMAAf8DPwFsCAADIgExAwAB/wNRAbD/AKEAA1AB
        xQMAAf8DFQEcCAADRQF8AwAB/wM7AWUMAAMoAe8DKAHvDAADOwFlAwAB/wNFAXwIAAMVARwDAAH/A1AB
        xf8AoQADRQHaAwAB/wMGAQcIAANKAYoDAAH/AzUBVQwAAygB7wMoAe8MAAM1AVUDAAH/A0oBiggAAwYB
        BwMAAf8DRQHa/wChAAMoAe8DJAHxDAADKQE+A1EBsAMSARgMAANHAYIDRwGCDAADEgEYA1EBsAMpAT4M
        AAMkAfEDKAHv/wCdAAMFAQYDBAH+A0MB3FAAA0MB3AMEAf4DBQEG/wCZAAMeASoDAAH/A0IB3gM6AWAD
        OgFgAzoBYAM6AWADOgFgAzoBYAM6AWADOgFgAzoBYAM6AWADOgFgAzoBYAM6AWADOgFgAzoBYAM6AWAD
        OgFgAzoBYAM6AWADOgFgA0IB3gMAAf8DHgEq/wCVAAMuAUcDGQH1AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/Ax0B9AMuAUf/AI0ABAEDQAHgAwQB/gNNAZYDRgGAA0YBgANGAYADRgGAA0YB
        gANGAYADRgGAA0YBgANGAYADRgGAA0YBgANGAYADRgGAA0YBgANGAYADRgGAA0YBgANGAYADRgGAA0YB
        gANGAYADRgGAA00BlgMEAf4DQAHgBAH/AIkAAwgBCgMAAf8DQgHdYAADQgHdAwAB/wMIAQr/AI0AA0oB
        0wMAAf8DUQG2A08BnwNPAZ8DTwGfA08BnwNPAZ8DTwGfA08BnwNPAZ8DTwGfA08BnwNPAZ8DTwGfA08B
        nwNPAZ8DTwGfA08BnwNPAZ8DTwGfA08BnwNPAZ8DTwGfA08BnwNRAbYDAAH/A0oB0/8AkQADIwEzAzkB
        5QMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wM5AeUDIwEz/wCVAAMGAQgDJgE4AyoB
        QAMqAUADKgFAAyoBQANSAasDAAH/A0UBfAMqAUADKgFAAyoBQAMqAUADKgFAAyoBQAMqAUADKgFAA0UB
        fAMAAf8DUgGrAyoBQAMqAUADKgFAAyoBQAMmATgDBgEI/wCxAANIAYUDAAH/Az8BbSAAAz8BbQMAAf8D
        SAGF/wDJAAMlATcDCAH9AwgB/ANAAeADPgHfAz4B3wM+Ad8DPgHfAz4B3wM+Ad8DQAHgAwgB/AMIAf0D
        JQE3/wDNAAM3AVoDPgHfAwQB/gMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMEAf4DPgHfAzcBWv8AqQAB
        QgFNAT4HAAE+AwABKAMAAYADAAEgAwABAQEAAQEGAAECFgAD/wEAAfwCAAE/DAAB+AIAAR8MAAH4Av8B
        HwwAAfgBzgFzAR8MAAH4AcYBYwEfDAAB+AHGAWMBHwwAAfgBxgFjAR8MAAH4AcYBYwEfDAAB+QHGAWMB
        nwwAAfEBzgFzAY8MAAHxAY4BcQGPDAAB8QGOAXEBjwwAAfEBjgFxAY8MAAHxAY4BcQGPDAAB8QGOAXEB
        jwwAAfEBjgFxAY8MAAHxAY4BcQGPDAAB8QGOAXEBjwwAAfEBjgFxAY8MAAHxAY4BcQGPDAAB8wGOAXEB
        zwwAAeMC/wHHDAAB4AIAAQcMAAHAAgABAwwAAYACAAEBDAABjwL/AfEMAAHAAgABAwwAAcACAAEDDAAB
        4AIAAQcMAAH/AY8B8QH/DAAB/wGAAQEB/wwAAf8BwAEDAf8MAAs=
</value>
  </data>
</root>